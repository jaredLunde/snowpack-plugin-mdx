// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`snowpack-plugin-mdx should compile .md files: .js 1`] = `
"\\"use strict\\";

Object.defineProperty(exports, \\"__esModule\\", {
  value: true
});
exports[\\"default\\"] = MDXContent;

var _react = _interopRequireDefault(require(\\"react\\"));

var _react2 = require(\\"@mdx-js/react\\");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \\"default\\": obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

/* @jsx mdx */
var makeShortcode = function makeShortcode(name) {
  return function MDXDefaultShortcode(props) {
    console.warn(\\"Component '\\" + name + \\"' was not imported, exported, or provided by MDXProvider as global scope\\");
    return (0, _react2.mdx)(\\"div\\", props);
  };
};

var layoutProps = {};
var MDXLayout = \\"wrapper\\";

function MDXContent(_ref) {
  var components = _ref.components,
      props = _objectWithoutProperties(_ref, [\\"components\\"]);

  return (0, _react2.mdx)(MDXLayout, _extends({}, layoutProps, props, {
    components: components,
    mdxType: \\"MDXLayout\\"
  }), (0, _react2.mdx)(\\"h1\\", null, \\"Hello world\\"), (0, _react2.mdx)(\\"p\\", null, \\"This is a plain markdown file\\"));
}

;
MDXContent.isMDXComponent = true;"
`;

exports[`snowpack-plugin-mdx should compile .mdx files: .js 1`] = `
"\\"use strict\\";

Object.defineProperty(exports, \\"__esModule\\", {
  value: true
});
exports[\\"default\\"] = MDXContent;

var _react = _interopRequireDefault(require(\\"react\\"));

var _react2 = require(\\"@mdx-js/react\\");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \\"default\\": obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

/* @jsx mdx */
var makeShortcode = function makeShortcode(name) {
  return function MDXDefaultShortcode(props) {
    console.warn(\\"Component '\\" + name + \\"' was not imported, exported, or provided by MDXProvider as global scope\\");
    return (0, _react2.mdx)(\\"div\\", props);
  };
};

var layoutProps = {};
var MDXLayout = \\"wrapper\\";

function MDXContent(_ref) {
  var components = _ref.components,
      props = _objectWithoutProperties(_ref, [\\"components\\"]);

  return (0, _react2.mdx)(MDXLayout, _extends({}, layoutProps, props, {
    components: components,
    mdxType: \\"MDXLayout\\"
  }), (0, _react2.mdx)(\\"h1\\", null, \\"Hello world\\"), (0, _react2.mdx)(\\"p\\", null, \\"This is an MDX file\\"));
}

;
MDXContent.isMDXComponent = true;"
`;

exports[`snowpack-plugin-mdx should implement custom renderer: preact 1`] = `
"\\"use strict\\";

Object.defineProperty(exports, \\"__esModule\\", {
  value: true
});
exports[\\"default\\"] = MDXContent;

var _preact = require(\\"preact\\");

var _preact2 = require(\\"@mdx-js/preact\\");

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

/* @jsx mdx */
var makeShortcode = function makeShortcode(name) {
  return function MDXDefaultShortcode(props) {
    console.warn(\\"Component '\\" + name + \\"' was not imported, exported, or provided by MDXProvider as global scope\\");
    return (0, _preact2.mdx)(\\"div\\", props);
  };
};

var layoutProps = {};
var MDXLayout = \\"wrapper\\";

function MDXContent(_ref) {
  var components = _ref.components,
      props = _objectWithoutProperties(_ref, [\\"components\\"]);

  return (0, _preact2.mdx)(MDXLayout, _extends({}, layoutProps, props, {
    components: components,
    mdxType: \\"MDXLayout\\"
  }), (0, _preact2.mdx)(\\"h1\\", null, \\"Hello world\\"), (0, _preact2.mdx)(\\"p\\", null, \\"This is a plain markdown file\\"));
}

;
MDXContent.isMDXComponent = true;"
`;
